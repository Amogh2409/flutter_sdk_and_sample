🧩 Project Overview

This project consists of a **Flutter-based Engagement Tracking SDK** designed to extract and report user interaction data from mobile apps. It helps app developers automatically track key usage metrics and send them securely to a backend server for analytics and insights.

The project includes:

1. `sample_app/` – a working Flutter app to demonstrate how to use the SDK.
2. `engagement_sdk/` – the SDK itself, built as a reusable Flutter package.
3. `documents.txt` – this documentation to explain the entire project and its working.





🧠 What the SDK Tracks

We currently track five key user engagement parameters:

| Parameter Name     | Description                               | Example                  |
| ------------------ | ----------------------------------------- | ------------------------ |
| `userId`           | Anonymous user identifier                 | `"user_abc123"`          |
| `screenName`       | Name of screen visited                    | `"RewardsScreen"`        |
| `sessionTimestamp` | Time of interaction                       | `"2025-07-31T15:20:00Z"` |
| `buttonTapCount`   | Number of times a button was tapped       | `3`                      |
| `customValue`      | Any custom app-specific value (e.g. cart) | `42.50`                  |

*❗ Note: No personal or sensitive user information is tracked.*

---

🧱 Project Structure

```bash
root/
│
├── engagement_sdk/         # SDK source code (library)
│   ├── lib/
│   │   └── engagement_sdk.dart  # Main SDK file
│   └── pubspec.yaml
│
├── sample_app/             # Flutter app using the SDK
│   ├── lib/
│   │   └── main.dart
│   └── pubspec.yaml
│
└── documents.txt           # Documentation and usage guide
```

---

⚙️ How the SDK Works

Here’s how data flows through the SDK:

1. **Initialization**
   The SDK is initialized with a server endpoint, API key, and encryption settings.

2. **Event Tracking**
   The Flutter app triggers `trackEvent(...)` calls to log relevant user actions.

3. **Data Buffering**
   Events are stored temporarily on the device in memory or local storage.

4. **Batch Upload**
   After every 10 events (or a time delay), the data is encrypted and sent to a backend server.

5. **Server Processing**
   The server decrypts and stores the data for reporting and analysis.

---

🧪 SDK Integration in the Sample App

### 1. Add the SDK Dependency

```yaml
# sample_app/pubspec.yaml
dependencies:
  engagement_sdk:
    path: ../engagement_sdk
```

### 2. Initialize the SDK

```dart
// main.dart
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await EngagementSdk.initialize(
    apiEndpoint: 'https://your-api.com/track',
    apiKey: 'API_KEY_123',
  );
  runApp(MyApp());
}
```

### 3. Track Events from the App

```dart
// When screen is opened
EngagementSdk.trackEvent(
  name: 'screen_opened',
  parameters: {
    'userId': 'user_abc123',
    'screenName': 'HomeScreen',
    'sessionTimestamp': DateTime.now().toIso8601String(),
  },
);

// When button is tapped
EngagementSdk.trackEvent(
  name: 'buy_button_tap',
  parameters: {
    'userId': 'user_abc123',
    'buttonTapCount': 2,
    'customValue': 150.0,
  },
);
```





📡 Server Integration (Backend)

The SDK sends data as a POST request with the following payload:

```json
{
  "events": [
    {
      "eventName": "screen_opened",
      "parameters": {
        "userId": "user_abc123",
        "screenName": "HomeScreen",
        "sessionTimestamp": "2025-07-31T15:20:00Z"
      }
    }
  ],
  "apiKey": "API_KEY_123"
}
```



✅ Benefits of This SDK

| Feature                    | Benefit                               |
| -------------------------- | ------------------------------------- |
| Reusable package           | Write once, use in multiple apps      |
| Consistent data structure  | Standardized JSON format for analysis |
| Lightweight implementation | No UI lag or app slowdown             |
| Easy to debug & maintain   | Single source of truth for tracking   |
| Secure and privacy-focused | Ready for global compliance           |




🧾 License

This SDK is open-source (or proprietary – depending on your project).
All contributions must align with the license and privacy policies.


End of Documentation
**Created by Amogh | © 2025 Engagement Tracker Team**
